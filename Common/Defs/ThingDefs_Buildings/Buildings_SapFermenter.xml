<?xml version="1.0" encoding="utf-8"?>
<Defs>
  <ThingDef Abstract="True" ParentName="BuildingBase" Name="TS_SapFilter_Base">
    <drawerType>MapMeshAndRealTime</drawerType>
    <minifiedDef>MinifiedThing</minifiedDef>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <fillPercent>0.45</fillPercent>
    <pathCost>42</pathCost>
    <thingCategories>
      <li>BuildingsProduction</li>
    </thingCategories>
    <tickerType>Rare</tickerType>
    <rotatable>true</rotatable>
    <designationCategory>Production</designationCategory>
    <uiOrder>2710</uiOrder>
    <constructEffect>ConstructWood</constructEffect>
    <building>
      <buildingTags>
        <li>Production</li>
      </buildingTags>
      <destroySound>BuildingDestroyed_Wood_Small</destroySound>
    </building>
  </ThingDef>

  <ThingDef ParentName="TS_SapFilter_Base">
    <defName>TS_GlowsapFilter</defName>
    <label>Cauldron of Transposition</label>
    <description>A deeply rooted basin that, when filled with glowsap, will slowly filter and absorb most of the elements and nutrients within. This process destroys the given glowsap, but the preserved contents produce a powerful, highly valuable sap. These new saps can then either be used, or sold.
The outcome will always be one vial of refined sap, but which one it is will be entirely random. It's not an efficient use of glowsap, but is useful if glowsap reserves are plentiful.</description>
    <graphicData>
      <texPath>Things/Building/Production/FermentingBarrel</texPath>
      <graphicClass>Graphic_Multi</graphicClass>
      <damageData>
        <rect>(0.05,0.1,0.9,0.9)</rect>
      </damageData>
      <shadowData>
        <volume>(0.75, 0.35, 0.33)</volume>
      </shadowData>
    </graphicData>
    <statBases>
      <WorkToBuild>600</WorkToBuild>
      <Mass>10</Mass>
      <MaxHitPoints>100</MaxHitPoints>
      <Flammability>1.0</Flammability>
    </statBases>
    <costList>
      <Steel>10</Steel>
      <WoodLog>30</WoodLog>
    </costList>
    <comps>
      <li Class="Terrasecurity.ThingCompProperties_ThingConverter">
        <compClass>Terrasecurity.ThingComp_ThingConverter</compClass>
        <!-- when a pawn carries items to the converter / takes them out, this is how long they stand in front of the building-->
        <timeToFillTicks>600</timeToFillTicks>
        <timeToEmptyTicks>100</timeToEmptyTicks>
        <drawFillableBar>true</drawFillableBar>
        <!-- x, y, z offset for the bar. centered by default -->
        <fillableBarDrawOffset>(0, 0.00001, 0)</fillableBarDrawOffset>
        <fillableBarSize>(0.55, 0.1)</fillableBarSize>
        <fillableBarBackgroundColor>(21, 25, 29)</fillableBarBackgroundColor>
        <fillableBarFilledColor>(51, 204, 217)</fillableBarFilledColor>
        <inputThings>
            <!-- needs exactly one entry -->
            <TS_Glowsap>240</TS_Glowsap>
        </inputThings>
        <conversionDurationTicks>1200</conversionDurationTicks>
        <potentialResults>
          <li>
            <weight>4</weight>
            <things>
                <TS_Endosap>1</TS_Endosap>
            </things>
          </li>
          <li>
            <weight>4</weight>
            <things>
                <TS_Sunsap>1</TS_Sunsap>
            </things>
          </li>
          <li>
            <weight>2</weight>
            <things>
                <TS_Hypersap>1</TS_Hypersap>
            </things>
          </li>
        </potentialResults>
      </li>
    </comps>
    <researchPrerequisites>
      <!--<li>Brewing</li>-->
    </researchPrerequisites>
  </ThingDef>
</Defs>